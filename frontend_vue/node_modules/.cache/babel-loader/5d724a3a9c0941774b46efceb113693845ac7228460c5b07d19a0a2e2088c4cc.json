{"ast":null,"code":"import { EmailEditor } from 'vue-email-editor';\nimport axios from 'axios';\nexport default {\n  name: 'exampleView',\n  components: {\n    EmailEditor\n  },\n  data() {\n    return {\n      minHeight: \"100%\",\n      locale: \"zh\",\n      excel_data: []\n    };\n  },\n  methods: {\n    // called when the editor is created\n    editorLoaded() {\n      console.log('editorLoaded');\n      // Pass the template JSON here\n      // this.$refs.emailEditor.editor.loadDesign({});\n    },\n\n    // called when the editor has finished loading\n    editorReady() {\n      console.log('editorReady');\n    },\n    saveDesign() {\n      this.$refs.emailEditor.editor.saveDesign(design => {\n        console.log('saveDesign', design);\n      });\n    },\n    exportHtml() {\n      this.$refs.emailEditor.editor.exportHtml(data => {\n        console.log('exportHtml', data);\n      });\n    },\n    input_excel() {\n      axios.get('http://localhost:8000/files/646318ddb253215c4c4316de', {\n        params: {\n          token: 'jessica',\n          skip: 0,\n          limit: 1\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).then(this.excel_data = res.data);\n    }\n  }\n};","map":{"version":3,"names":["EmailEditor","axios","name","components","data","minHeight","locale","excel_data","methods","editorLoaded","console","log","editorReady","saveDesign","$refs","emailEditor","editor","design","exportHtml","input_excel","get","params","token","skip","limit","headers","then","res"],"sources":["C:\\Codes\\vue-my_server\\my_server\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"example\">\r\n    <div class=\"container\">\r\n      <div id=\"bar\">\r\n        <h1>Vue Email Editor (Demo)</h1>\r\n\r\n        <button v-on:click=\"input_excel\">Check data</button>\r\n        <button v-on:click=\"saveDesign\">Save Design</button>\r\n        <button v-on:click=\"exportHtml\">Export HTML</button>\r\n      </div>\r\n\r\n      <EmailEditor\r\n        :min-height=\"minHeight\"\r\n        :locale=\"locale\"\r\n        ref=\"emailEditor\"\r\n        v-on:load=\"editorLoaded\"\r\n        v-on:ready=\"editorReady\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { EmailEditor } from 'vue-email-editor';\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    name: 'exampleView',\r\n    components: {\r\n      EmailEditor,\r\n    },\r\n    data() {\r\n        return {\r\n            minHeight: \"100%\",\r\n            locale: \"zh\",\r\n            excel_data: []\r\n        }\r\n    },\r\n    methods: {\r\n      // called when the editor is created\r\n      editorLoaded() {\r\n        console.log('editorLoaded');\r\n        // Pass the template JSON here\r\n        // this.$refs.emailEditor.editor.loadDesign({});\r\n      },\r\n      // called when the editor has finished loading\r\n      editorReady() {\r\n        console.log('editorReady');\r\n      },\r\n      saveDesign() {\r\n        this.$refs.emailEditor.editor.saveDesign((design) => {\r\n          console.log('saveDesign', design);\r\n        });\r\n      },\r\n      exportHtml() {\r\n        this.$refs.emailEditor.editor.exportHtml((data) => {\r\n          console.log('exportHtml', data);\r\n        });\r\n      },\r\n      input_excel() {\r\n        axios.get('http://localhost:8000/files/646318ddb253215c4c4316de', {\r\n          params: {\r\n            token: 'jessica',\r\n            skip: 0,\r\n            limit: 1\r\n          },\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }).then(\r\n          (res) => {console.log(res.data)}\r\n        ).then(\r\n          this.excel_data = res.data\r\n        )\r\n      }\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;\r\n}\r\n\r\n#app, #example {\r\n  height: 100%;\r\n}\r\n\r\n#example .container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  height: 100%;\r\n}\r\n\r\n#bar {\r\n  flex: 1;\r\n  background-color: #40B883;\r\n  color: #FFF;\r\n  padding: 10px;\r\n  display: flex;\r\n  max-height: 40px;\r\n}\r\n\r\n#bar h1 {\r\n  flex: 1;\r\n  font-size: 16px;\r\n  text-align: left;\r\n}\r\n\r\n#bar button {\r\n  flex: 1;\r\n  padding: 10px;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  background-color: #000;\r\n  color: #FFF;\r\n  border: 0px;\r\n  max-width: 150px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AAuBE,SAASA,WAAU,QAAS,kBAAkB;AAC9C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,YAAYA,CAAA,EAAG;MACbC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B;MACA;IACF,CAAC;;IACD;IACAC,WAAWA,CAAA,EAAG;MACZF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAACC,WAAW,CAACC,MAAM,CAACH,UAAU,CAAEI,MAAM,IAAK;QACnDP,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEM,MAAM,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,KAAK,CAACC,WAAW,CAACC,MAAM,CAACE,UAAU,CAAEd,IAAI,IAAK;QACjDM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,IAAI,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC;IACDe,WAAWA,CAAA,EAAG;MACZlB,KAAK,CAACmB,GAAG,CAAC,sDAAsD,EAAE;QAChEC,MAAM,EAAE;UACNC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE;QACT,CAAC;QACDC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CAACC,IAAI,CACJC,GAAG,IAAK;QAACjB,OAAO,CAACC,GAAG,CAACgB,GAAG,CAACvB,IAAI,CAAC;MAAA,CACjC,CAAC,CAACsB,IAAI,CACJ,IAAI,CAACnB,UAAS,GAAIoB,GAAG,CAACvB,IACxB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}