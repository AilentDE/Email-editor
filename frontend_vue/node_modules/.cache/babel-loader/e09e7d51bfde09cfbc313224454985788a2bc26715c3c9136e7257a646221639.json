{"ast":null,"code":"import { EmailEditor } from 'vue-email-editor';\nimport axios from 'axios';\nexport default {\n  name: 'exampleView',\n  components: {\n    EmailEditor\n  },\n  data() {\n    return {\n      minHeight: \"100%\",\n      projectId: 164913,\n      locale: \"zh-TW\",\n      file: \"\",\n      excel_id: \"\",\n      excel_data: [],\n      mailBody: \"base\"\n    };\n  },\n  methods: {\n    // called when the editor is created\n    editorLoaded() {\n      console.log('editorLoaded');\n      // Pass the template JSON here\n      // this.$refs.emailEditor.editor.loadDesign({});\n    },\n\n    // called when the editor has finished loading\n    editorReady() {\n      console.log('editorReady');\n    },\n    saveDesign() {\n      this.$refs.emailEditor.editor.saveDesign(design => {\n        console.log('saveDesign', design);\n      });\n    },\n    exportHtml() {\n      this.$refs.emailEditor.editor.exportHtml(data => {\n        // console.log('exportHtml', data);\n        console.log(data);\n      });\n    },\n    input_excel() {\n      return null;\n    },\n    test_excel() {\n      axios.get('http://localhost:8000/files/' + this.excel_id, {\n        params: {\n          skip: 0,\n          limit: 1\n        },\n        headers: {\n          \"accept\": \"application/json\",\n          \"csrfToken\": \"inuitoko\"\n        }\n      }).then(res => {\n        console.log(res.data);\n        this.excel_data = res.data;\n        console.log(this.excel_data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    submitFile() {\n      let formData = new FormData();\n      formData.append('file', this.file);\n      axios.post('http://localhost:8000/files/uploadfile', formData, {\n        // params: {\n        //   token: 'inuitoko'\n        // },\n        headers: {\n          'accept': 'application/json',\n          'Content-Type': 'multipart/form-data',\n          \"csrfToken\": \"inuitoko\"\n        }\n      }).then(res => {\n        console.log(res.data);\n        this.excel_id = res.data.file_id;\n        window.alert('檔案上傳完成');\n      }).catch(error => {\n        console.log(error);\n        window.alert(error.response.data.message);\n      });\n    },\n    handleFileUpload() {\n      this.file = this.$refs.file.files[0];\n    },\n    sendSampleEmail() {\n      const sampleMail = prompt('請輸入接收信箱');\n      new Promise(resolve => {\n        this.$refs.emailEditor.editor.exportHtml(data => {\n          resolve(data);\n        });\n      }).then(res => {\n        this.mailBody = res;\n      }).catch(error => {\n        console.log(error);\n      });\n      console.log(this.mailBody);\n      axios.post('http://localhost:8000/email/send-sample-email', {\n        \"commons\": {\n          \"skip\": 0,\n          \"limit\": 1\n        },\n        \"mail_request\": {\n          \"file_id\": this.excel_id,\n          \"mail_body\": this.mailBody\n        },\n        \"email\": sampleMail\n      }, {\n        headers: {\n          'accept': 'application/json',\n          'Content-Type': 'application/json',\n          \"csrfToken\": \"inuitoko\"\n        }\n      }).then(res => {\n        console.log(res.data);\n        window.alert('郵件寄出');\n      }).catch(error => {\n        console.log(error);\n        window.alert(error.response.data.message);\n      });\n    },\n    sendMails() {\n      const feature = prompt('請輸入email欄位名稱');\n      return feature;\n    }\n  }\n};","map":{"version":3,"names":["EmailEditor","axios","name","components","data","minHeight","projectId","locale","file","excel_id","excel_data","mailBody","methods","editorLoaded","console","log","editorReady","saveDesign","$refs","emailEditor","editor","design","exportHtml","input_excel","test_excel","get","params","skip","limit","headers","then","res","catch","error","submitFile","formData","FormData","append","post","file_id","window","alert","response","message","handleFileUpload","files","sendSampleEmail","sampleMail","prompt","Promise","resolve","sendMails","feature"],"sources":["/app/src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"example\">\r\n    <div class=\"container\">\r\n      <div id=\"bar\">\r\n        <h1>Email Editor (Demo)</h1>\r\n\r\n        <label>導入excel\r\n          <input type=\"file\" accept=\".xls,.xlsx,.csv\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload\"/>\r\n          <button v-on:click=\"submitFile\">Upload data</button>\r\n        </label>\r\n        <button v-on:click=\"test_excel\">Check data</button>\r\n        <!-- <button v-on:click=\"saveDesign\">Save Design</button> -->\r\n        <button v-on:click=\"exportHtml\">Export HTML</button>\r\n        <button @click=\"sendSampleEmail\">Send sample mail</button>\r\n        <button>Send mails</button>\r\n      </div>\r\n\r\n      <EmailEditor\r\n        :min-height=\"minHeight\"\r\n        :projectId=\"projectId\"\r\n        :locale=\"locale\"\r\n        ref=\"emailEditor\"\r\n        v-on:load=\"editorLoaded\"\r\n        v-on:ready=\"editorReady\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { EmailEditor } from 'vue-email-editor';\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    name: 'exampleView',\r\n    components: {\r\n      EmailEditor,\r\n    },\r\n    data() {\r\n        return {\r\n            minHeight: \"100%\",\r\n            projectId: 164913,\r\n            locale: \"zh-TW\",\r\n            file: \"\",\r\n            excel_id: \"\",\r\n            excel_data: [],\r\n            mailBody: \"base\"\r\n        }\r\n    },\r\n    methods: {\r\n      // called when the editor is created\r\n      editorLoaded() {\r\n        console.log('editorLoaded');\r\n        // Pass the template JSON here\r\n        // this.$refs.emailEditor.editor.loadDesign({});\r\n      },\r\n      // called when the editor has finished loading\r\n      editorReady() {\r\n        console.log('editorReady');\r\n      },\r\n      saveDesign() {\r\n        this.$refs.emailEditor.editor.saveDesign((design) => {\r\n          console.log('saveDesign', design);\r\n        });\r\n      },\r\n      exportHtml() {\r\n        this.$refs.emailEditor.editor.exportHtml((data) => {\r\n          // console.log('exportHtml', data);\r\n          console.log(data)\r\n        });\r\n      },\r\n      input_excel() {\r\n        return null\r\n      },\r\n      test_excel() {\r\n        axios.get('http://localhost:8000/files/' + this.excel_id, {\r\n          params: {\r\n            skip: 0,\r\n            limit: 1\r\n          },\r\n          headers: {\r\n            \"accept\": \"application/json\",\r\n            \"csrfToken\": \"inuitoko\"\r\n          }\r\n        }).then(\r\n          (res) => {\r\n          console.log(res.data);\r\n          this.excel_data = res.data;\r\n          console.log(this.excel_data)\r\n        }).catch(\r\n          (error) => {console.log(error)}\r\n        )\r\n      },\r\n      submitFile() {\r\n        let formData = new FormData();\r\n        formData.append('file', this.file);\r\n        axios.post('http://localhost:8000/files/uploadfile',\r\n          formData,\r\n          {\r\n          // params: {\r\n          //   token: 'inuitoko'\r\n          // },\r\n          headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'multipart/form-data',\r\n            \"csrfToken\": \"inuitoko\"\r\n          }\r\n        }).then(\r\n          (res) => {\r\n            console.log(res.data);\r\n            this.excel_id = res.data.file_id;\r\n            window.alert('檔案上傳完成')\r\n          }\r\n        ).catch(\r\n          (error) => {\r\n            console.log(error);\r\n            window.alert(error.response.data.message)\r\n          }\r\n        )\r\n      },\r\n      handleFileUpload() {\r\n        this.file = this.$refs.file.files[0]\r\n      },\r\n      sendSampleEmail() {\r\n        const sampleMail = prompt('請輸入接收信箱');\r\n        new Promise((resolve) => {\r\n          this.$refs.emailEditor.editor.exportHtml((data) => {\r\n            resolve(data);\r\n          });\r\n        }).then((res) => {\r\n          this.mailBody = res;\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        });\r\n        console.log(this.mailBody)\r\n        axios.post('http://localhost:8000/email/send-sample-email',{\r\n          \"commons\": {\r\n            \"skip\": 0,\r\n            \"limit\": 1\r\n          },\r\n          \"mail_request\": {\r\n            \"file_id\": this.excel_id,\r\n            \"mail_body\": this.mailBody\r\n          },\r\n          \"email\": sampleMail\r\n        },{\r\n          headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"csrfToken\": \"inuitoko\"\r\n          }\r\n        }).then(\r\n          (res) => {\r\n            console.log(res.data);\r\n            window.alert('郵件寄出')\r\n          }\r\n        ).catch(\r\n          (error) => {\r\n            console.log(error);\r\n            window.alert(error.response.data.message)\r\n          }\r\n        )\r\n      },\r\n      sendMails() {\r\n        const feature = prompt('請輸入email欄位名稱');\r\n        return feature\r\n      }\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;\r\n}\r\n\r\n#app, #example {\r\n  height: 100%;\r\n}\r\n\r\n#example .container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  height: 100%;\r\n}\r\n\r\n#bar {\r\n  flex: 1;\r\n  background-color: #40B883;\r\n  color: #FFF;\r\n  padding: 10px;\r\n  display: flex;\r\n  max-height: 40px;\r\n}\r\n\r\n#bar h1 {\r\n  flex: 1;\r\n  font-size: 16px;\r\n  text-align: left;\r\n}\r\n\r\n#bar button {\r\n  flex: 1;\r\n  padding: 10px;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  background-color: #000;\r\n  color: #FFF;\r\n  border: 0px;\r\n  max-width: 150px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}